//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;

// A dialogue represents a series of lines spoken within an EventInterface.
// There may be more than one Dialogue within a given EventInterface.
public class Dialogue
{
	private List<DialogueLine> lineList;

	// Constructor for this EventInterface.
	// Records the EventInterface to which it belongs.
	public Dialogue ()
	{
		lineList = new List<DialogueLine> ();
	}

	// Plays the scene.
	public void ReadLines(PlayerShip ship)
	{
		foreach (DialogueLine line in this.lineList) {
			if (ship.numActive(line.GetSpeaker()) > 0 )
			{
				line.ReadLine();
			}
		}
	}

	// Plays a line of dialogue.
	private void readLine(int lineNum)
	{
		this.lineList [lineNum].ReadLine();
	}
}

